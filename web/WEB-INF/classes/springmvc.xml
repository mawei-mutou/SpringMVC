<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <!--配置HandlerMapping,它的作用是解析请求的url，解析除控制器的逻辑名：，然后指出这个逻辑名对应调用哪个控制器（或者方法），
        交给HandlerAdapter去调用-->
<!--        <bean id="controller" class="controller.DemoController"></bean>-->
<!--        <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
<!--            <property name="urlMap">-->
<!--                <map>-->
<!--                    <entry key="demo" value-ref="controller"/>-->
<!--                </map>-->
<!--            </property>-->
<!--        </bean>-->
<!--        &lt;!&ndash;HandlerAdapter和ViewResovler有默认的，可以不用配置，这里示例配置一下&ndash;&gt;-->
<!--        <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>&lt;!&ndash;它去调用Mapper给出的控制器&ndash;&gt;-->
<!--        &lt;!&ndash;这是配置ViewResolver&ndash;&gt;-->
<!--        <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--            &lt;!&ndash;如果在控制器中 ModelAndView mav = new ModelAndView("jsp.jsp")这样写，就不需要下面两个属性的配置，如果写为"main"就需要&ndash;&gt;-->
<!--            <property name="prefix" value="/"/>-->
<!--            <property name="suffix" value=".jsp"/>-->
<!--        </bean>-->

    <!--////////////////////上面是一种配置方式，下面是使用注解的方式////////////////////////////////////////////////////////////////////////////////////////////-->
    <!--配置注解,将有注解的包配置在下面，这样就能去通过反射去解析有注解的类-->
    <context:component-scan base-package="controller"/>
    <!--注解驱动-->
    <!--下面这条配置就是已经配置了这两条：相当于配置了 HandlerMapping 和 HandlerAdapter
            org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping
            org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter
        -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--
        访问静态资源时不希望被拦截，可以用下面的配置：
            <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
            mapping="/js/**   :  当url的逻辑名为以/js/开头的任意资源，都会到  location="/js/" 配置的  web路径下的 js 文件下去寻找对应的资源
            一个 * 表示 /js/下一层的任意内容  两个 ** 表示 /js/下任意层的任意内容
          如：
            http://localhost:8080/SpringMVjs/js/js/ppp.js
            就会去 web的 js 下寻找  js/js/ppp.js

            静态资源包括：
                js、css、image等

    -->
    <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/image/" mapping="/image/**"></mvc:resources>

        <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <!--如果在控制器中 ModelAndView mav = new ModelAndView("jsp.jsp")这样写，就不需要下面两个属性的配置，如果写为"main"就需要-->
            <property name="prefix" value="/"/>
            <property name="suffix" value=".jsp"/>
        </bean>
</beans>